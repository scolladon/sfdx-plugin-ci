####################################################
# Docker image with sfdx installed
####################################################
image: "mehdisfdc/sfdx-cli"

####################################################
# Assign environnement variables for SFDX
####################################################
before_script: 
  - export SFDX_USE_GENERIC_UNIX_KEYCHAIN=true
  - export SFDX_DOMAIN_RETRY=300
  - export SFDX_DISABLE_APP_HUB=true
  - export SFDX_LOG_LEVEL=DEBUG


####################################################
# STAGES
####################################################
stages:
 - pre-deploy
 - deploy
 - post-deploy


####################################################
# Helpers
####################################################
.decryptCertificate: &decryptCertificate |
  openssl aes-256-cbc -d -md md5 -in $SERVER_KEY_PATH -out build/server.key -pass pass:$SERVER_KEY_PASSWORD

.authToOrg : &authToOrg |
  sfdx force:auth:jwt:grant -s -i $CONSUMERKEY -f build/server.key -u $USERNAME -r $INSTANCE_URL

.deployCheckOnly: &deployCheckOnly |
  sfdx force:source:deploy -c -p force-app -l RunLocalTests -w 30

.removeScratchOnlyFolders: &removeScratchOnlyFolders |
  rm -rf force-app/main/default/namedCredentials/

.deploy: &deploy |
  sfdx force:source:deploy -p force-app -w 30

.deployAndTest: &deployAndTest |
  sfdx force:source:deploy -p force-app -l RunLocalTests -w 30

.deployCheckOnly: &deployCheckOnly |
  sfdx force:source:deploy -c -p force-app -l RunLocalTests -w 30


####################################################
# Check code quality with PMD
####################################################
pmd-check:
  stage: pre-deploy
  script:
    - echo SFDX_DOMAIN_RETRY ############# FIXME !!!!!!
    #===Download PMD===
    - wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-bin-$PMD_VERSION.zip
    - unzip pmd-bin-$PMD_VERSION.zip
    #===Make sure there is no PMD error with a high priority===
    - pmd-bin-$PMD_VERSION/bin/run.sh pmd -minimumpriority $PMD_MINIMUM_PRIORITY -d force-app -R custom-apex-rules.xml -f text -l apex

####################################################
# Verify that sources can be pushed to a fresh scratch org
####################################################
scratch-check:
  stage: pre-deploy
  except:
    - develop
    - release/*
    - master
  environment:
    name: SCRATCH
  script:
    #===assign variables===
    - export USERNAME=$PROD_USERNAME
    - export CONSUMERKEY=$PROD_CONSUMERKEY
    - export INSTANCE_URL=https://login.salesforce.com
    - export SERVER_KEY_PATH=build/PROD_server.key.enc
    - export SERVER_KEY_PASSWORD=$PROD_KEY_PASSWORD
    #===login to Dev Hub===
    - *decryptCertificate
    - *authToOrg
    #===setup scratch org===
    - sfdx force:org:create -v $USERNAME --setdefaultusername --definitionfile config/project-scratch-def.json --setalias ciorg --wait 10 --durationdays 1
    - sfdx force:org:display -u ciorg
    - sfdx force:source:push -u ciorg --json
    #===get test results===
    - sfdx force:apex:test:run -u ciorg --wait 10
    #===delete scratch org===
    - sfdx force:org:delete -u ciorg 

####################################################
# Check-only deploy in CI sandbox
####################################################
ci-validate:
  stage: pre-deploy
  except:
    - develop
    - release/*
    - master
  environment:
    name: CI
  script:
    #===assign variables===
    - export USERNAME=$CI_USERNAME
    - export CONSUMERKEY=$CI_CONSUMERKEY
    - export INSTANCE_URL=https://login.salesforce.com
    - export SERVER_KEY_PATH=build/CI_server.key.enc
    - export SERVER_KEY_PASSWORD=$CI_KEY_PASSWORD
    #===remove env specific metadata===
    - *removeScratchOnlyFolders
    #===auth with target===
    - *decryptCertificate
    - *authToOrg
    #===deploy===
    - *deployCheckOnly

####################################################
# Deploy in INTEG sandbox
####################################################
integ-deploy:
  stage: deploy
  only:
    - develop
  environment:
    name: INTEG
  script:
    #===assign variables===
    - export USERNAME=$INTEG_USERNAME
    - export CONSUMERKEY=$INTEG_CONSUMERKEY
    - export INSTANCE_URL=https://login.salesforce.com
    - export SERVER_KEY_PATH=build/INTEG_server.key.enc
    - export SERVER_KEY_PASSWORD=$INTEG_KEY_PASSWORD
    #===remove env specific metadata===
    - *removeScratchOnlyFolders
    #===auth with target===
    - *decryptCertificate
    - *authToOrg
    #===deploy===
    - *deploy

####################################################
# Deploy in UAT
####################################################
uat-deploy:
  stage: deploy
  only:
    - release/*
  environment:
    name: UAT
  script:
    #===assign variables===
    - export USERNAME=$UAT_USERNAME
    - export CONSUMERKEY=$UAT_CONSUMERKEY
    - export INSTANCE_URL=https://login.salesforce.com
    - export SERVER_KEY_PATH=build/UAT_server.key.enc
    - export SERVER_KEY_PASSWORD=$UAT_KEY_PASSWORD
    #===remove env specific metadata===
    - *removeScratchOnlyFolders
    #===auth with target===
    - *decryptCertificate
    - *authToOrg
    #===deploy===
    - *deployAndTest

####################################################
# Deploy in PRODUCTION
####################################################
prod-deploy:
  stage: deploy
  only:
    - master
  environment:
    name: PRODUCTION
  script:
    #===assign variables===
    - export USERNAME=$PROD_USERNAME
    - export CONSUMERKEY=$PROD_CONSUMERKEY
    - export INSTANCE_URL=https://login.salesforce.com
    - export SERVER_KEY_PATH=build/PROD_server.key.enc
    - export SERVER_KEY_PASSWORD=$PROD_KEY_PASSWORD
    #===remove env specific metadata===
    - *removeScratchOnlyFolders
    #===auth with target===
    - *decryptCertificate
    - *authToOrg
    #===deploy===
    - *deployAndTest
